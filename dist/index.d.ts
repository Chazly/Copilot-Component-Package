export * from './types';
import './providers/openai';
export type { CopilotConfig as LegacyCopilotConfig, AICopilotConfig as AdvancedCopilotConfig, CopilotConfigType } from './types';
export type { DeepPartial, ConfigPartial, RequiredFields, ValidAICopilotConfig, ValidLegacyConfig, StrictValidationResult, ValidationSuggestion, MigrationPlan, MigrationStep, ConfigPreset, BuilderState, ValidationErrors } from './types/utils';
export { useCopilotChat } from './hooks/useCopilotChat';
export { useCopilotConfig, migrateConfig } from './hooks/useCopilotConfig';
export { useModelProvider } from './hooks/useModelProvider';
export { useTools } from './hooks/useTools';
export { CopilotChat, RESIZABLE_PANEL_CLASSNAME } from './components/CopilotChat';
export { CopilotProvider, useCopilotContext, withCopilot } from './components/CopilotProvider';
export { FloatingCopilot } from './components/FloatingCopilot';
export { ResizableLayout } from './components/ResizableLayout';
export { OnboardingFlow } from './components/OnboardingFlow';
export { ActionButtons } from './components/ActionButtons';
export { BaseProvider, ProviderRegistry } from './services/BaseProvider';
export { OllamaProvider } from './services/OllamaProvider';
export { CustomProvider, createCustomProvider } from './services/CustomProvider';
export { OPENAI_MODELS, createOpenAIConfig } from './providers/openai';
export { CopilotConfigBuilder, createCopilotConfig, createBasicConfig, createEnterpriseConfig as createEnterpriseConfigBuilder, createDevelopmentConfig, createProductionConfig, createSecureConfig, createHighPerformanceConfig, createComplianceConfig } from './builders/ConfigBuilder';
export { ConfigValidator, configValidator, validateConfig as validateConfigStrict, autoFixConfig, getImprovementPlan } from './validation/ConfigValidator';
export { MigrationAssistant, migrationAssistant, migrateToAI, migrateToLatest as migrateToLatestPhase, getMigrationPlan, previewMigration, validateMigration } from './migration/MigrationAssistant';
export { isAICopilotConfig, isLegacyCopilotConfig } from './types';
export { default as EnterpriseDashboard } from './components/EnterpriseDashboard';
export { Button } from './components/ui/button';
export { Input } from './components/ui/input';
export { ScrollArea } from './components/ui/scroll_area';
export { useMemoryScope } from './hooks/useMemoryScope';
export { useSecurityPolicy } from './hooks/useSecurityPolicy';
export { detectFramework, getApiKey, getDefaultModel, validateEnvironment, detectEnvironment, getEnvVar } from './lib/env';
export declare const COPILOT_VERSION = "1.0.0-phase5";
export declare const createEnterpriseConfig: (baseConfig: any) => any;
export declare const migrateToPhase5: (legacyConfig: any) => any;
export declare const validatePhase5Config: (config: any) => {
    valid: boolean;
    errors: string[];
    warnings: string[];
    recommendations: string[];
};
